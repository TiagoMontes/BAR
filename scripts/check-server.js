const fetch = require('node-fetch');

async function checkServer() {
  try {
    console.log('üîç Verificando se o servidor est√° rodando...\n');
    
    const serverUrl = 'http://localhost:3001';
    
    // Testar endpoint de health
    console.log(`üåê Testando: ${serverUrl}/api/health`);
    const healthResponse = await fetch(`${serverUrl}/api/health`);
    
    if (healthResponse.ok) {
      const healthData = await healthResponse.json();
      console.log('‚úÖ Servidor est√° rodando!');
      console.log('   Status:', healthData.status);
      console.log('   Timestamp:', healthData.timestamp);
      
      // Testar endpoint de vendas
      console.log('\nüß™ Testando endpoint de vendas...');
      const vendasResponse = await fetch(`${serverUrl}/api/vendas/comanda/8`);
      
      if (vendasResponse.ok) {
        const vendasData = await vendasResponse.json();
        console.log(`‚úÖ Endpoint de vendas funcionando!`);
        console.log(`   Total de vendas: ${vendasData.length}`);
        
        if (vendasData.length > 0) {
          const primeiraVenda = vendasData[0];
          console.log(`\nüìã Primeira venda:`);
          console.log(`   - fileName: "${primeiraVenda.fileName}"`);
          console.log(`   - cupomId: "${primeiraVenda.cupomId}"`);
          console.log(`   - total: R$ ${primeiraVenda.total}`);
          
          if (primeiraVenda.cupomId === 'undefined' || primeiraVenda.cupomId === undefined) {
            console.log(`\n‚ùå PROBLEMA: cupomId ainda est√° vindo como "undefined"`);
            console.log(`   Isso indica que o servidor precisa ser reiniciado para aplicar as mudan√ßas`);
            console.log(`\nüí° Solu√ß√£o:`);
            console.log(`   1. Pare o servidor (Ctrl+C)`);
            console.log(`   2. Reinicie o servidor: npm run dev ou node server/index.js`);
            console.log(`   3. Execute este teste novamente`);
          } else {
            console.log(`\n‚úÖ PROBLEMA RESOLVIDO: cupomId est√° correto!`);
          }
        }
      } else {
        console.log(`‚ùå Erro no endpoint de vendas: ${vendasResponse.status}`);
      }
      
    } else {
      console.log('‚ùå Servidor n√£o est√° respondendo');
      console.log('   Status:', healthResponse.status);
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar servidor:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° O servidor n√£o est√° rodando');
      console.log('   Execute: npm run dev ou node server/index.js');
    }
  }
}

checkServer(); 